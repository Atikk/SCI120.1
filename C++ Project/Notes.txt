	
	
	vector<double> vel(5);
	vel[4] = 5.6;
	vel.resize(3,0);
	vel.clear();
	vel.push_back(3);
	vel.pop_back();
	vel.push_back(-2);
	vel.push_back(4);
	vel.resize(12, 0);
	vel.push_back(10);

	int i = 0;
	while (i < vel.size())
	{
		cout << vel[i] << ' ';
		i = i + 1;
	}

	cout << endl;
	cout << "size=" << vel.size() << endl;
	cout << "size=" << vel.size() << endl;

	string city;
	string state = "New York";
	string divider(40, '-');
	city = "NYC";
	string address = city + "," + state;
	cout << address.length();
	cout << address.assign(50,'0');
	cout << address.substr(0,4);
	cout << address.empty();
	address[0];
	------------------------------------------------------------
	string sentence = "easy comes having worth nothing.";
	vector<string> splitWords;

	int p0 = 0;
	int p = 0;
	int lp = sentence.length() - 1;
	while (p <= lp) {
		if (sentence[p] == ' ' || p == lp) {
			string word = sentence.substr(p0, p - p0);
			splitWords.push_back(word);
			p0 = p + 1;
		}
		p = p + 1;
	}
	while (!splitWords.empty())
	{
		cout << splitWords.back() << ' ';
		splitWords.pop_back();
	}
	cout << endl;
----------------------------------

#include <iostream>
#include <cmath>
#include <string>
#include "myLib.hpp"
#include <vector>

using namespace std;

double avg;
double percentDifference(double x_1, double x_2){
if(avg == 0) {
	cout << "Error: division by 0\n";
	return -1;
}
return fabs((x_1 - x_2) / avg) * 100.;
};
double getVal(string prompt) {
	cout << prompt << " ";
	double v;
	cin >> v;
	return v;

}
int main()
{
	/*Exe1();Exe2();Exe3();Exe4();Exe5();Exe6();

	Path
	----
	C:\Users\NINO.THOMAS96\source\repos\'C++ Project'\x64\Debug

	*/
	cout << "Enter experiment values:\n";
	double x = getVal("x = ");
	double y = getVal("y = ");
	double dif = precentDifference(x, y);
	if (dif >= 0) {
		cout << "%Diff = " << dif << "%\n";
	}
};

__________________________________________
int main() {
	/*Exe1();Exe2();Exe3();Exe4();Exe5();Exe6();

	Path
	----
	C:\Users\NINO.THOMAS96\source\repos\'C++ Project'\x64\Debug

	*/
	cout << "Enter a file name:\n";
	string fileNameString;
	getline(cin, fileNameString);

	ofstream fileOut;

	fileOut.open(fileNameString);
	fileOut << "Writing inside file\n";
	fileOut << 7 * 8 << endl;
	fileOut.close();
};

-----------------------------------------------------------
#include <iostream>
#include <cmath>
#include <string>
#include "myLib.hpp"
#include <vector>
#include <fstream>

using namespace std;

int main() {
	int a = 1;
	int b = 3;
	int c = 7;

	cout << "Pick a letter: a, b, or c: ";
	char letter;
	cin >> letter;

	int* ip = nullptr; // defines pointer to hcar ip and init to null pointer.
	if (letter == 'a') { 
		ip = &a; //get address of a and save in ip
	}
	if (letter == 'b') {
		ip = &b;
	}
	if (letter == 'c')
	{
		ip = &c;
	}
	if (ip != nullptr) {
		cout << "That has a value of "<< *ip << endl;
	}
};

/*

double x;
cin >> x;
int* p = nullptr;
if(x>0){x = x^.5; p = &x;}
if (p != nullptr){cout << “sqrt = “ << p << endl;
else{cout<< “value is invalid”;}

*/

----------------------------------------------------
cout << int('M');

-----------------------------------------------------
10/19/23
//#include <iostream>;
//#include <string>;
//using namespace std;
//
//int main() {
//
//	unsigned short num = 32767;
//	
//	cout << sizeof(num) << " bytes\n";
//	cout << "max value computed " << pow(2, 8 * sizeof(num)) << endl;
//	cout << num << endl;
//	num = num + 1;
//	cout << num << endl;
//
//	int big1 = 230;
//	int big2 = 524;
//
//	int overflow = 7'000'000'000;
//
//	int ave1 = (big1 + big2) / 2;
//	cout << "ave1 = " << ave1 << endl;
//
//	int ave2 = big1 + (big2 - big1) / 2;
//	cout << "ave2 = " << ave2 << endl;
//
//	cout << overflow << endl;
//
//	double ok = 12;
//
//	static_cast<int>(ok);
//
//
//
//}

// stoi example
#include <iostream>   // std::cout
#include <string>     // std::string, std::stoi
#include<iomanip>
#include<ctime>

using namespace std;

const double DEG2RAD = 3.14159 / 180.;
const double RAD2DEG = 1. / DEG2RAD;
struct Point {
	double x, y;
};
double par_area(Point r1, Point r2)
{
	return r1.x * r2.y - r2.x * r1.y;

}

int main()
{
	struct StudentInfo {
		string name;
		char grade;
	};
	StudentInfo student_1{ "The name" };
	student_1.name = "John Smith";
	student_1.name += ", Jr.";
	student_1.grade = 'A';

	string underline;
	underline.assign(student_1.name.length(), '-');

	cout << endl;
	cout << "Hello " << student_1.name;
	cout << "     " << underline << endl;
	cout << "Your name has " << student_1.name.length() << " letters and spaces\n";
	cout << "Your grade is " << student_1.grade << endl;

	double n_i = 1;
	double n_r = 1.33;

	double ang_i;
	cout << "Enter angle of incidence: ";
	cin >> ang_i;

	double ang_r = asin((n_i / n_r) * sin(ang_i * DEG2RAD)) * RAD2DEG;

	cout << fixed << setprecision(1);
	cout << "Angle of refraction " << ang_r << " degrees\n";

	//(sum j = 0 to m - 1 (Subscript[b,{j}]) * (Subscript[b,{j}] + 1) / 2)/((n / 2 * m)(n + 2m - 1))

	int max = 6;
	int num;
	num = rand() % max + 1;
	Point v1 = { 4, 4. };
	Point v2 = { 1541., 3424324. };

	cout << "area parallelogram = " << par_area(v1, v2) << endl;


}
---------------------------------------------------------------------------------